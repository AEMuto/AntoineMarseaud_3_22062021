/*** Variables ***/

/** Thème Couleurs **/

// Couleurs Principales
$clr-primary: #9356dc;
$clr-secondary: #ff79da;
$clr-tertiary: #99e2d0;

// Couleurs Arrière Plan
$clr-bg-default: #fff;
$clr-bg-base: #eaeaea;
$clr-bg-dark: #353535;
$clr-bg-light: #f6f6f6;

/** Breakpoints **/
$sm: 768px;
$md: 900px;
$lg: 1200px;

/** Padding **/
$padding: calc(
  20 * (1px - ((100vw - 375px) / 1065)) + 50 * ((100vw - 375px) / 1065)
);
// Avec max() on definit la largeur maximum
// du contenu des blocs à 1340px
$padding-page: max(#{$padding}, (100vw - 1200px) / 2);
$padding-button: 1.2rem;

/** Typographie **/
$typography: (
  color: (
    default: #000,
    grey: #7e7e7e,
    white: #fff,
  ),
  font-family: (
    alt: (
      Shrikhand,
      cursive,
    ),
    default: (
      Roboto,
      sans-serif,
    ),
  ),
  font-size: (
    logo: 1.875rem,
    heading: 1.5rem,
    title: 1.125rem,
    sub: 1.075rem,
    default: 1rem,
    small: 0.875rem,
  ),
  font-weight: (
    thin: 100,
    light: 300,
    default: 400,
    medium: 500,
    bold: 700,
  ),
);

/*** Mixins ***/

@mixin fonts($args...) {
  $properties: map-keys($typography);
  $results: ();
  @each $key, $value in $typography {
    $map: map-get($typography, $key);
    @each $subKey, $subValue in $map {
      @each $arg in $args {
        @if $arg == $subKey {
          $tempList: (
            $key: $arg,
          );
          $results: map-merge($results, $tempList);
        }
      }
    }
  }
  // @debug $results;
  @each $key, $value in $properties {
    @if map-has-key($results, $key) != true {
      $tempMap: (
        $key: default,
      );
      $results: map-merge($results, $tempMap);
    }
  }
  // @debug $results;
  @each $key, $value in $results {
    $map: map-get($typography, $key);
    #{$key}: map-get($map, $value);
  }
}

@mixin responsive($width) {
  @if $width == sm {
    @media only screen and (min-width: $sm) {
      @content;
    }
  }
  @if $width == md {
    @media only screen and (min-width: $md) {
      @content;
    }
  }
  @if $width == lg {
    @media only screen and (min-width: $lg) {
      @content;
    }
  }
  @if $width == landscape {
    @media only screen and (orientation: landscape) {
      @content;
    }
  }
}

@mixin shadow() {
  box-shadow: 0rem 0.2rem 0.4rem 0rem lighten($clr-bg-dark, 60%);
}

@import url(https://fonts.googleapis.com/css2?family=Roboto:wght@100;300;400;500;700&family=Shrikhand&display=swap);

html {
  box-sizing: border-box;
  font-size: 16px;
  scroll-behavior: smooth;
}

/*
  We inherit box-sizing: border-box; from our <html> selector
  Apparently this is a bit better than applying box-sizing: border-box; directly to the * selector
*/

*,
*:before,
*:after {
  box-sizing: inherit;
  padding: 0;
  margin: 0;
}

ul {
  list-style: none;
}

a,
a:hover,
a:active,
a:visited {
  text-decoration: none;
  color: #000;
}

button {
  border: none;
  &:active {
    outline: none;
  }
}

// Composants
.button {
  @include fonts(medium);
  letter-spacing: 0.06rem;
  background: $clr-bg-default;
  border-radius: 2.2rem;
  position: relative;
  @include shadow();
  cursor: pointer;
  &--cta {
    padding: $padding-button;
    min-width: 13rem;
    background: linear-gradient(to top left, $clr-primary, $clr-secondary);
    color: $clr-bg-default;
  }
  &--usage {
    // ! Mettre un - counter-reset: number; - dans le container parent de ces boutons
    margin: 0 0 0 0.8rem;
    padding: $padding-button;
    border-radius: 1.25rem;
    background: $clr-bg-light;
    display: flex;
    cursor: auto;
    p {
      @include fonts(bold);
    }
    i.fas {
      font-size: 1.2rem;
      margin: 0 0.5rem 0 0.3rem;
      color: map-get($typography, color, grey);
    }
    &::before {
      counter-increment: number;
      content: counter(number);
      position: absolute;
      background: $clr-primary;
      color: $clr-bg-default;
      clip-path: circle();
      left: -0.8rem;
      top: 0.8rem;
      padding: 0.5rem;
    }
  }
}
.container-card {
  display: grid;
  gap: 2rem;
  grid-template-columns: repeat(auto-fit, minmax(15rem, 1fr));
  grid-auto-rows: 37.481259370314845vh;
  @include responsive(landscape) {
    grid-auto-rows: 50vh;
  }
  @include responsive(lg) {
    grid-auto-rows: 35vh;
  }
}
.card {
  background: $clr-bg-default;
  border-radius: 1.2rem;
  position: relative;
  display: grid;
  grid-template-rows: 1fr 4.688rem;
  @include shadow();
  overflow: hidden;
  &__img-wrapper {
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: 1fr;
    overflow: hidden;
    source {
      display: none;
    }
    img {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
  }
  &__txt {
    position: relative;
    align-self: center;
    margin: 0 0 0 1rem;
    .card__title {
      @include fonts(title, bold);
    }
    .card__location {
      @include fonts(sub, light);
    }
    .card__like {
      position: absolute;
      right: 1rem;
      bottom: 0.7rem;
      width: 2rem;
      height: 2rem;
      display: flex;
      justify-content: center;
      align-items: center;
      > * {
        background: #000;
        background-clip: text;
        -webkit-background-clip: text;
        color: transparent;
      }
      i.far.fa-heart {
        transform: scale(1.5, 1.7);
      }
      i.fas.fa-heart {
        position: absolute;
        opacity: 0%;
        transform: scale(0);
        transition: all 0.5s 0.2s linear;
      }
      &:hover {
        > * {
          background: linear-gradient(
            to bottom left,
            $clr-primary,
            $clr-secondary
          );
          background-clip: text;
          -webkit-background-clip: text;
          color: transparent;
        }
        i.fas.fa-heart {
          opacity: 100%;
          transform: scale(1.5, 1.7);
        }
      }
    }
  }
}
/* Accueil **************************************************************************************/

// Navigation
nav {
  text-align: center;
  > * {
    padding: 0.4rem $padding-page;
  }
  h1 {
    position: relative;
    @include shadow();
    @include fonts(logo, alt);
    i.fas {
      position: absolute;
      left: $padding-page;
      top: 1.2rem;
      font-size: 1.3rem;
    }
  }
  .location {
    background: $clr-bg-base;
    p {
      margin: 0.4rem 0;
      @include fonts(medium);
    }
    .fas {
      margin: 0 1rem 0 -1rem;
    }
  }
}

// Header
header {
  display: grid;
  grid-template-areas:
    "hero"
    "usage";
  text-align: center;
  @include responsive(sm) {
    grid-template-areas: "hero usage";
    grid-auto-columns: 1fr;
    gap: 2rem;
    padding: 0 $padding-page;
    margin: 2rem 0;
  }
  @include responsive(lg) {
    grid-auto-columns: 2fr 1fr;
  }
  > * {
    padding: 2rem $padding-page;
    display: flex;
    flex-direction: column;
    justify-content: center;
  }
  .hero {
    grid-area: hero;
    background: $clr-bg-light;
    @include responsive(sm) {
      padding: 2rem;
      border-radius: 2rem;
    }
    h1 {
      width: 85%;
      margin: 0 auto 1rem auto;
      @include fonts(heading, bold);
    }
    p {
      margin-bottom: 2rem;
      @include fonts(title, light);
    }
    .button {
      margin-bottom: 2rem;
    }
  }
  .usage {
    grid-area: usage;
    @include responsive(sm) {
      padding: 2rem 0;
    }
    h1 {
      margin: 0 0 2rem 0;
      @include fonts(heading, bold);
    }
    .container {
      counter-reset: number;
      display: grid;
      grid-template-columns: 1fr;
      gap: 2rem;
      .button.button--usage {
        &:nth-of-type(1) i.fas {
          transform: scale(1.3, 1.2);
        }
        &:nth-of-type(n + 2) i.fas {
          transform: scale(0.9, 1.1);
        }
        &:nth-of-type(3) {
          background: adjust-color(
            $clr-primary,
            $saturation: 50%,
            $lightness: 36%
          );
          i.fas {
            color: $clr-primary;
          }
        }
      }
    }
  }
}

// Main
main.accueil {
  padding: 2rem $padding-page;
  background: $clr-bg-light;
  @include responsive(lg) {
    padding: 2rem;
    margin: 2rem $padding-page;
    border-radius: 2rem;
  }
  h1 {
    margin: 0 0 2rem 0;
    @include fonts(heading, bold);
  }
}

// Footer
footer {
  padding: 1rem $padding-page 2rem $padding-page;
  background: $clr-bg-dark;
  h1 {
    margin: 0 0 1rem 0;
    @include fonts(white, alt, title);
  }
  li {
    margin: 0 0 0.5rem 0;
    i.fas {
      margin: 0 0.6rem 0 0;
      font-size: 0.725rem;
    }
    &:nth-of-type(-n + 2) a {
      @include fonts(white);
    }
    &:nth-of-type(n + 3) a {
      @include fonts(white, light);
    }
  }
}

/* Menu - Pages **********************************************************************************/

// Main
main.menu {
  padding: 0;
  padding-top: 13.75rem;
  position: relative;
  background: none;
  @include responsive(sm) {
    padding-bottom: 4rem;
  }
  picture {
    position: absolute;
    z-index: -1;
    top: 0;
    left: 0;
    overflow: hidden;
    height: 17rem;
    width: 100vw;
    @include responsive(sm) {
      height: 100%;
    }
    img {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
  }
  .carte {
    background: $clr-bg-light;
    padding: 1.8rem $padding-page 6rem $padding-page;
    border-radius: 3rem 3rem 0 0;
    display: flex;
    flex-direction: column;
    @include responsive(sm) {
      margin: 0 $padding-page 0 $padding-page;
      padding: 1.8rem 2rem 4rem 2rem;
      border-radius: 3rem;
    }
    &__title {
      display: flex;
      justify-content: space-between;
      margin: 0 0 1rem 0;
      h1 {
        @include fonts(logo, alt);
        margin: 0;
      }
      .carte__like {
        margin: 0.3rem 1rem 0 0;
        width: 2rem;
        height: 2rem;
        display: flex;
        justify-content: center;
        align-items: center;
        cursor: pointer;
        > * {
          background: #000;
          background-clip: text;
          -webkit-background-clip: text;
          color: transparent;
        }
        i.far.fa-heart {
          transform: scale(1.5, 1.7);
        }
        i.fas.fa-heart {
          position: absolute;
          opacity: 0%;
          transform: scale(0);
          transition: all 0.5s 0.2s linear;
        }
        &:hover {
          > * {
            background: linear-gradient(
              to bottom left,
              $clr-primary,
              $clr-secondary
            );
            background-clip: text;
            -webkit-background-clip: text;
            color: transparent;
          }
          i.fas.fa-heart {
            opacity: 100%;
            transform: scale(1.5, 1.7);
          }
        }
      }
    }
    &__dishes {
      display: flex;
      flex-direction: column;
      margin: 1rem 0;
      h2 {
        @include fonts(light);
        text-transform: uppercase;
        margin: 0 0 2rem 0;
        position: relative;
        &::after {
          content: "";
          position: absolute;
          height: 0.2rem;
          width: 2rem;
          background: $clr-tertiary;
          bottom: -0.5rem;
          left: 0;
        }
      }
      .button--dish {
        display: flex;
        border-radius: 1rem;
        margin: 0 0 1rem 0;
        letter-spacing: 0;
        justify-content: flex-start;
        text-align: left;
        height: 4.375rem;
        overflow: hidden;
        .button__text {
          display: flex;
          flex-direction: column;
          justify-content: space-between;
          flex: 1;
          height: 100%;
          padding: 0.8rem;
          white-space: nowrap;
          overflow: hidden;
          text-overflow: ellipsis;
          > * {
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
          }
          h3 {
            @include fonts(title, bold);
          }
          p {
            @include fonts(light);
          }
        }
        .button__price {
          padding: 0.8rem 1rem;
          align-self: flex-end;
          @include fonts(bold);
        }
        .button__order {
          border-radius: 0 1rem 1rem 0;
          display: flex;
          justify-content: center;
          align-items: center;
          align-self: stretch;
          background: $clr-tertiary;
          width: 0;
          font-size: 1.5rem;
          color: $clr-bg-default;
          transform-origin: right;
          transform: scaleX(0);
          transition: all 0.5s ease-in-out;
          i.fas {
            transform: rotate(0turn);
            transition: 0.5s ease-in-out;
          }
        }
        &:hover {
          .button__order {
            width: 3.75rem;
            transform: scaleX(1);
            i.fas {
              transform: rotate(1turn);
            }
          }
        }
      }
    }
    .button--cta {
      margin: 2rem auto 0 auto;
    }
  }
}
